<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: resources/osmformat.proto

namespace osm2sql\pbf;

use Exception;
use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;
use GPBMetadata\Resources\Osmformat;

/**
 * Generated from protobuf message <code>osm2sql.pbf.PrimitiveBlock</code>
 */
class PrimitiveBlock extends Message
{
    /**
     * Generated from protobuf field <code>.osm2sql.pbf.StringTable stringtable = 1;</code>
     */
    private $stringtable = null;
    /**
     * Generated from protobuf field <code>repeated .osm2sql.pbf.PrimitiveGroup primitivegroup = 2;</code>
     */
    private $primitivegroup;
    /**
     * Granularity, units of nanodegrees, used to store coordinates in this block
     *
     * Generated from protobuf field <code>int32 granularity = 17;</code>
     */
    private $granularity = 0;
    /**
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     *
     * Generated from protobuf field <code>int64 lat_offset = 19;</code>
     */
    private $lat_offset = 0;
    /**
     * Generated from protobuf field <code>int64 lon_offset = 20;</code>
     */
    private $lon_offset = 0;
    /**
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     *
     * Generated from protobuf field <code>int32 date_granularity = 18;</code>
     */
    private $date_granularity = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type StringTable $stringtable
     *     @type PrimitiveGroup[]|RepeatedField $primitivegroup
     *     @type int $granularity
     *           Granularity, units of nanodegrees, used to store coordinates in this block
     *     @type int|string $lat_offset
     *           Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     *     @type int|string $lon_offset
     *     @type int $date_granularity
     *           Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     * }
     */
    public function __construct($data = NULL) {
        Osmformat::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.osm2sql.pbf.StringTable stringtable = 1;</code>
     * @return StringTable
     */
    public function getStringtable()
    {
        return $this->stringtable;
    }

    /**
     * Generated from protobuf field <code>.osm2sql.pbf.StringTable stringtable = 1;</code>
     * @param StringTable $var
     * @return $this
     * @throws Exception
     */
    public function setStringtable($var)
    {
        GPBUtil::checkMessage($var, StringTable::class);
        $this->stringtable = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .osm2sql.pbf.PrimitiveGroup primitivegroup = 2;</code>
     * @return RepeatedField
     */
    public function getPrimitivegroup()
    {
        return $this->primitivegroup;
    }

    /**
     * Generated from protobuf field <code>repeated .osm2sql.pbf.PrimitiveGroup primitivegroup = 2;</code>
     * @param PrimitiveGroup[]|RepeatedField $var
     * @return $this
     * @throws Exception
     */
    public function setPrimitivegroup($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, PrimitiveGroup::class);
        $this->primitivegroup = $arr;

        return $this;
    }

    /**
     * Granularity, units of nanodegrees, used to store coordinates in this block
     *
     * Generated from protobuf field <code>int32 granularity = 17;</code>
     * @return int
     */
    public function getGranularity()
    {
        return $this->granularity;
    }

    /**
     * Granularity, units of nanodegrees, used to store coordinates in this block
     *
     * Generated from protobuf field <code>int32 granularity = 17;</code>
     * @param int $var
     * @return $this
     * @throws Exception
     */
    public function setGranularity($var)
    {
        GPBUtil::checkInt32($var);
        $this->granularity = $var;

        return $this;
    }

    /**
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     *
     * Generated from protobuf field <code>int64 lat_offset = 19;</code>
     * @return int|string
     */
    public function getLatOffset()
    {
        return $this->lat_offset;
    }

    /**
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     *
     * Generated from protobuf field <code>int64 lat_offset = 19;</code>
     * @param int|string $var
     * @return $this
     * @throws Exception
     */
    public function setLatOffset($var)
    {
        GPBUtil::checkInt64($var);
        $this->lat_offset = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 lon_offset = 20;</code>
     * @return int|string
     */
    public function getLonOffset()
    {
        return $this->lon_offset;
    }

    /**
     * Generated from protobuf field <code>int64 lon_offset = 20;</code>
     * @param int|string $var
     * @return $this
     * @throws Exception
     */
    public function setLonOffset($var)
    {
        GPBUtil::checkInt64($var);
        $this->lon_offset = $var;

        return $this;
    }

    /**
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     *
     * Generated from protobuf field <code>int32 date_granularity = 18;</code>
     * @return int
     */
    public function getDateGranularity()
    {
        return $this->date_granularity;
    }

    /**
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     *
     * Generated from protobuf field <code>int32 date_granularity = 18;</code>
     * @param int $var
     * @return $this
     * @throws Exception
     */
    public function setDateGranularity($var)
    {
        GPBUtil::checkInt32($var);
        $this->date_granularity = $var;

        return $this;
    }

}

