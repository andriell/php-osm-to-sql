<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: resources/osmformat.proto

namespace Osm2sql\Pbf;

use Exception;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\GPBUtil;
use Osm2sql\Pbf\Resources\Osmformat;

/**
 * THIS IS STUB DESIGN FOR CHANGESETS. NOT USED RIGHT NOW.
 *
 * Generated from protobuf message <code>Osm2sql.Pbf.ChangeSet</code>
 */
class ChangeSet extends Message
{
    /**
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     */
    private $id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *             // Parallel arrays.
     *             repeated uint32 keys = 2 [packed = true]; // String IDs.
     *             repeated uint32 vals = 3 [packed = true]; // String IDs.
     *             optional Info info = 4;
     * }
     */
    public function __construct($data = NULL) {
        Osmformat::initOnce();
        parent::__construct($data);
    }

    /**
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     *
     * Generated from protobuf field <code>int64 id = 1;</code>
     * @param int|string $var
     * @return $this
     * @throws Exception
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

}

